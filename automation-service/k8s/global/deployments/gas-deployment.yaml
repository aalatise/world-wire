# Gas Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ww-gas
  namespace: default
  labels:
    app: ww-gas
    type: global
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ww-gas
  template:
    metadata:
      labels:
        app: ww-gas
        type: global
      annotations:
        sidecar.istio.io/inject: "true"
        vault.hashicorp.com/ca-cert: "/run/secrets/kubernetes.io/serviceaccount/ca.crt"
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "sandbox-ww-global"
        vault.hashicorp.com/agent-inject-secret-env: "ww/data/sandbox/ww/gas-service/initialize"
        vault.hashicorp.com/agent-pre-populate-only: "true"
        vault.hashicorp.com/agent-inject-template-env: |
          {{- with secret "ww/data/sandbox/ww/gas-service/initialize" -}}
            {{- range $k, $v := .Data.data -}}
              export {{ $k -}}={{- $v }}
          {{ end }}
          {{- end -}}
    spec:
      serviceAccountName: sandbox-ww-global
      containers:
      - env:
        - name: SERVICE_NAME
          value: "gas-service"
        - name: HOME_DOMAIN_NAME
          value: "ww"
        image: jp.icr.io/dapww/gas-service:latest
        imagePullPolicy: Always
        name: ww-gas
        command: ["sh"]
        args: ["-c", "source /vault/secrets/env && npm start"]
        ports:
        - containerPort: 8099
        envFrom:
        - configMapRef:
            name: env-config-global
      restartPolicy: Always