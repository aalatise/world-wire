// Code generated by go-swagger; DO NOT EDIT.

package model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ApprovalUpdate ApprovalUpdate
// swagger:model ApprovalUpdate
type ApprovalUpdate struct {

	// status
	// Required: true
	Status *string `json:"status" validate:"required"`

	// uid approve
	// Required: true
	UIDApprove *string `json:"uid_approve" validate:"required"`
}

// Validate validates this approval update
func (m *ApprovalUpdate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUIDApprove(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *ApprovalUpdate) validateStatus(formats strfmt.Registry) error {

	if err := validate.Required("status", "body", m.Status); err != nil {
		return err
	}

	return nil
}

func (m *ApprovalUpdate) validateUIDApprove(formats strfmt.Registry) error {

	if err := validate.Required("uid_approve", "body", m.UIDApprove); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *ApprovalUpdate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ApprovalUpdate) UnmarshalBinary(b []byte) error {
	var res ApprovalUpdate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
